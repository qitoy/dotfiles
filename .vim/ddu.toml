[[plugins]]
repo = 'Shougo/ddu.vim'
depends = ['denops.vim']
hook_add = '''
nmap <Plug>(leader)u <Plug>(ddu)
nmap <F1> <Plug>(ddu)h

nnoremap <silent> <Plug>(ddu)m <Cmd>Ddu mr<CR>
nnoremap <silent> <Plug>(ddu)h
\ <Cmd>Ddu help -name=help -ui-param-startFilter<CR>
nnoremap <silent> <Plug>(ddu)f
\ <Cmd>Ddu -ui=filer file -source-option-path=`expand('%:p:h')`<CR>

'''
hook_source = '''
call ddu#custom#patch_global(#{
\ ui: 'ff',
\ sourceOptions: #{
\   _: #{
\     matchers: ['matcher_fzf'],
\   },
\   file: #{
\     columns: ['filename'],
\   },
\ },
\ sourceParams: #{
\   mr: #{
\     kind: 'mrw',
\   },
\ },
\ kindOptions: #{
\   file: #{
\     defaultAction: 'open',
\   },
\   help: #{
\     defaultAction: 'open',
\   },
\   action: #{
\     defaultAction: 'do',
\   },
\ },
\ actionOptions: #{
\   narrow: #{
\     quit: v:false,
\   },
\ },
\ uiParams: #{
\   filer: #{
\     sort: 'filename',
\     sortTreesFirst: v:true,
\   },
\ },
\})
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
depends = 'ddu.vim'
on_cmd = 'Ddu'

# UI
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-ff = '''
nnoremap <buffer><silent> <CR>
\ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
nnoremap <buffer><silent> i
\ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
nnoremap <buffer><silent> q
\ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
nnoremap <buffer><silent> a
\ <Cmd>call ddu#ui#ff#do_action('chooseAction')<CR>

if b:ddu_ui_name ==# 'help'
  nnoremap <buffer><silent> t
  \ <Cmd>call ddu#ui#ff#do_action('itemAction', #{ name: 'tabopen' })<CR>
  nnoremap <buffer><silent> v
  \ <Cmd>call ddu#ui#ff#do_action('itemAction', #{ name: 'vsplit' })<CR>
else
  nnoremap <buffer><silent> t
  \ <Cmd> call ddu#ui#ff#do_action('itemAction',
  \ #{ name: 'open', params: #{ command: 'tab drop' } })<CR>
  nnoremap <buffer><silent> v
  \ <Cmd> call ddu#ui#ff#do_action('itemAction',
  \ #{ name: 'open', params: #{ command: 'rightbelow vsplit' } })<CR>
  nnoremap <buffer><silent><nowait> s
  \ <Cmd> call ddu#ui#ff#do_action('itemAction',
  \ #{ name: 'open', params: #{ command: 'split' } })<CR>
endif
'''
ddu-ff-filter = '''
inoremap <buffer><silent> <CR>
\ <Esc><Cmd>call ddu#ui#ff#close()<CR>
nnoremap <buffer><silent> <CR>
\ <Cmd>call ddu#ui#ff#close()<CR>
nnoremap <buffer><silent> q
\ <Cmd>call ddu#ui#ff#close()<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-filer = '''
nnoremap <buffer><expr> <CR>
\ ddu#ui#filer#is_tree() ?
\ "<Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'narrow' })<CR>" :
\ "<Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'open' })<CR>"
nnoremap <buffer><silent> a
\ <Cmd>call ddu#ui#ff#do_action('chooseAction')<CR>
nnoremap <buffer> <Space>
\ <Cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>
nnoremap <buffer> h
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ #{ name: 'narrow', params: #{ path: ".." } })<CR>
nnoremap <buffer><expr> l
\ ddu#ui#filer#is_tree() ?
\ "<Cmd>call ddu#ui#filer#do_action('itemAction', #{name: 'narrow'})<CR>" : ""
nnoremap <buffer> q
\ <Cmd>call ddu#ui#filer#do_action('quit')<CR>
nnoremap <buffer><nowait> d
\ <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'newDirectory' })<CR>
nnoremap <buffer> N
\ <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'newFile' })<CR>
nnoremap <buffer> D
\ <Cmd>call ddu#ui#filer#do_action('itemAction', #{ name: 'delete' })<CR>
nnoremap <buffer> t
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ #{ name: 'open', params: #{ command: 'tab drop' } })<CR>
nnoremap <buffer> v
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ #{ name: 'open', params: #{ command: 'rightbelow vsplit' } })<CR>
nnoremap <buffer><nowait> s
\ <Cmd>call ddu#ui#filer#do_action('itemAction',
\ #{ name: 'open', params: #{ command: 'split' } })<CR>
'''

# sources
[[plugins]]
repo = 'Shougo/ddu-source-action'
on_source= 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
depends = 'ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kuuote/ddu-source-mr'
depends = 'mr.vim'
on_source = 'ddu.vim'

[[plugins]]
repo = 'lambdalisue/mr.vim'
on_source = 'ddu.vim'
hook_source = '''
let g:mr#mru#predicates = [
\ { filename -> filename !~# '/doc/' },
\ { filename -> filename !~# '/.git/' },
\]
'''

[[plugins]]
repo = 'matsui54/ddu-source-help'
on_source = 'ddu.vim'

#filters
[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'

#kinds
[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

#columns
[[plugins]]
repo = 'Shougo/ddu-column-filename'
on_source = 'ddu.vim'
