# Let dein manage dein
# Required:
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
depends = 'iceberg.vim'
hook_add = '''
let g:lightline = {
\   'colorscheme': 'iceberg',
\   'active': {
\     'left': [
\       ['mode', 'paste', 'skk_mode'],
\       ['readonly', 'filename', 'modified']
\     ]
\   },
\   'component_function': {
\     'skk_mode': 'g:lightline_skk#mode',
\   },
\ }
'''

[[plugins]]
repo = 'vim-jp/vital.vim'
merged = false

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
set background=dark
augroup vimrc
  autocmd ColorScheme * highlight Normal ctermbg=none
  autocmd ColorScheme * highlight NonText ctermbg=none
  autocmd ColorScheme * highlight LineNr ctermbg=none
  autocmd ColorScheme * highlight Folded ctermbg=none
  autocmd ColorScheme * highlight SignColumn ctermbg=none
  autocmd ColorScheme * highlight EndOfBuffer ctermbg=none
augroup END
colorscheme iceberg
'''

[[plugins]]
repo = 'vim-jp/syntax-vim-ex'

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
hook_add = '''
runtime macros/sandwich/keymap/surround.vim
'''

[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
if $DENOPS_DEBUG
  let g:denops#debug = 1
endif
'''
