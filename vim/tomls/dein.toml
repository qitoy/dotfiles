[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = #{
\ colorscheme: 'carbonfox',
\ active: #{
\   left: [ [ 'mode', 'paste', 'skk_mode' ],
\             [ 'readonly', 'filename', 'modified' ] ]
\   },
\ component_function: #{
\   skk_mode: 'g:lightline_skk#mode',
\   },
\}
'''

[[plugins]]
repo = 'yasunori-kirin0418/lightline_skk.vim'

[[plugins]]
repo = 'vim-jp/vital.vim'
merged = false

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'EdenEast/nightfox.nvim'
lua_add = '''
require('nightfox').setup({
  options = {
    transparent = true,
  }
})
'''

[[plugins]]
repo = 'vm-xeck/retskelet-nvim'

[[plugins]]
repo = 'vim-jp/syntax-vim-ex'

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'andymass/vim-matchup'

# {{{ textobj and operator
[[plugins]]
repo = 'machakann/vim-sandwich'
hook_add = '''
nnoremap s <Nop>
xnoremap s <Nop>
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-entire'
depends = 'vim-textobj-user'
on_map = '<Plug>(textobj-entire-'

[[plugins]]
repo = 'kana/vim-textobj-line'
depends = 'vim-textobj-user'
on_map = '<Plug>(textobj-line-'

[[plugins]]
repo = 'machakann/vim-textobj-functioncall'
depends = 'vim-textobj-user'
on_map = '<Plug>(textobj-functioncall-'

[[plugins]]
repo = 'kana/vim-operator-user'
# }}}

# {{{ denops
[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
if $DENOPS_DEBUG
let g:denops#debug = 1
endif
'''

[[plugins]]
repo = 'lambdalisue/guise.vim'

[[plugins]]
repo = 'skanehira/denops-translate.vim'

[[plugins]]
repo = 'lambdalisue/gin.vim'
hook_add = '''
nnoremap gs <Cmd>GinStatus<CR>
'''

[[plugins]]
repo = 'skanehira/denops-gh.vim'

[[plugins]]
repo = 'yuki-yano/fuzzy-motion.vim'
hook_add = '''
nnoremap ss <Cmd>FuzzyMotion<CR>
let g:fuzzy_motion_matchers = ['fzf', 'kensaku']
'''

[[plugins]]
repo = 'gamoutatsumi/dps-ghosttext.vim'

[[plugins]]
repo = 'qitoy/dps-procon.vim'
hook_add = '''
autocmd vimrc User DenopsPluginPost:procon call procon#modules('$VIM_HOOKS/procon.ts'->expand())
'''

[[plugins]]
repo = 'qitoy/dps-camp.vim'
hook_add = '''
command! -nargs=1 CampNew Ddu camp_new -source-param-camp-name=<args>
'''

[[plugins]]
repo = 'lambdalisue/kensaku.vim'
# }}}

[[plugins]]
repo = 'rcarriga/nvim-notify'
if = 'has("nvim")'
lua_add = '''
vim.notify = function(...)
  vim.notify = require'notify'
  vim.notify.setup {
    background_colour = '#000000'
  }
  vim.notify(...)
end
'''

[[plugins]]
repo = 'Shougo/shougo-s-github'
if = false
