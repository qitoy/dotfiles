[[plugins]]
repo = 'Shougo/dpp.vim'

[[plugins]]
repo = 'Shougo/dpp-ext-lazy'

[[plugins]]
repo = 'Shougo/dpp-ext-toml'

[[plugins]]
repo = 'Shougo/dpp-ext-installer'

[[plugins]]
repo = 'Shougo/dpp-protocol-git'

[[plugins]]
repo = 'tyru/capture.vim'
on_cmd = 'Capture'

[[plugins]]
repo = 'lervag/vimtex'
on_ft=['tex']
hook_add='''
if has('mac')
  let g:vimtex_view_method = 'skim'
  let g:vimtex_view_general_viewer='/Applications/Skim.app/Contents/SharedSupport/displayline'
  let g:vimtex_view_general_options = '@line @pdf @tex'
endif
if has('nvim')
  let g:vimtex_syntax_enabled = 0
  let g:vimtex_syntax_conceal_disable = 1
endif
'''

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
on_ft='help'
hook_add = 'set helplang=ja'

[[plugins]]
repo = 'segeljakt/vim-silicon'
on_cmd = 'Silicon'
hook_add = '''
let g:silicon = {
\ 'theme': 'Solarized (dark)',
\ 'font': 'UDEV Gothic 35LG',
\ 'output': '~/Documents/silicon-{time:%Y-%m-%d-%H%M%S}.png',
\}
'''

[[plugins]]
repo = 'terryma/vim-expand-region'
on_map = ['<Plug>(expand_region']
hook_add = '''
xnoremap v <Plug>(expand_region_expand)
xnoremap V <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
on_map = ['<Plug>(asterisk-']
hook_add = '''
noremap * <Plug>(asterisk-z*)
noremap # <Plug>(asterisk-z#)
noremap g* <Plug>(asterisk-gz*)
noremap g# <Plug>(asterisk-gz#)
'''

#[[plugins]]
#repo = 'hrsh7th/vim-eft'
#on_map = '<Plug>(eft-'
#hook_add = '''
#let g:eft_ignorecase = v:true
#
#let g:eft_index_function = {
#\ 'head': function('eft#index#head'),
#\ 'camel': function('eft#index#camel'),
#\ 'space': function('eft#index#space'),
#\ 'symbol': function('eft#index#symbol'),
#\}
#
#" If you prefer ; as repeat.
#nmap ; <Plug>(eft-repeat)
#xmap ; <Plug>(eft-repeat)
#
#nmap f <Plug>(eft-f)
#xmap f <Plug>(eft-f)
#omap f <Plug>(eft-f)
#nmap F <Plug>(eft-F)
#xmap F <Plug>(eft-F)
#omap F <Plug>(eft-F)
#
#nmap t <Plug>(eft-t)
#xmap t <Plug>(eft-t)
#omap t <Plug>(eft-t)
#nmap T <Plug>(eft-T)
#xmap T <Plug>(eft-T)
#omap T <Plug>(eft-T)
#'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_cmd = 'Qfreplace'

[[plugins]]
repo = 'itchyny/vim-qfedit'
on_event = 'QuickFixCmdPre'

[[plugins]]
repo = 'lambdalisue/vim-quickrun-neovim-job'

[[plugins]]
repo = 'statiolake/vim-quickrun-runner-nvimterm'

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
depends = ['vim-quickrun-neovim-job', 'vim-quickrun-runner-nvimterm']
hook_add = '''
let g:quickrun_config = {
\ '_': {
\   'runner': has('nvim') ? 'neovim_job' : 'job',
\ },
\}
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = ['Deol', 'DeolCd', 'DeolEdit']
hooks_file = '$VIM_HOOKS/deol.vim'

# {{{ context_filetype
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'
if = '!has("nvim")'
hook_add = '''
let g:precious_enable_switchers = #{
\ toml: #{ setfiletype: 0 },
\}
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
let g:context_filetype#filetypes = #{
\ help: [
\   #{
\     start: '>$',
\     end: '^\S',
\     filetype: 'vim.help',
\   },
\ ],
\ tex: [
\   #{
\     start: '\\begin{luacode\*}',
\     end: '\\end{luacode\*}',
\     filetype: 'lua',
\   },
\ ],
\}
'''

[[plugins]]
repo = 'thinca/vim-partedit'
depends = 'context_filetype.vim'
hook_add = '''
function! s:operator_partedit() abort
  let context = context_filetype#get()
  if context.range == [[0, 0], [0, 0]]
    echohl WarningMsg
    echomsg 'Context is not found'
    echohl NONE
    return
  endif
  call partedit#start(context.range[0][0], context.range[1][0],
        \ #{ filetype: context.filetype})
  nnoremap <buffer> q <Cmd>parteditEnd<CR>
endfunction
nnoremap <Plug>(leader)p <Cmd>call <SID>operator_partedit()<CR>
'''
# }}}

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = ['InsertEnter']
rev = 'feature/feedkeys'
hooks_file = '$VIM_HOOKS/lexima.vim'

[[plugins]]
repo = 'vim-pandoc/vim-pandoc'
on_ft = ['markdown']
on_cmd = 'Pandoc'
hook_add = '''
let g:pandoc#filetypes#handled = ["pandoc", "markdown"]
let g:pandoc#filetypes#pandoc_markdown = 0
let g:pandoc#spell#enabled = 0
let g:pandoc#command#autoexec_on_writes = 0
'''

[[plugins]]
repo = 'vim-pandoc/vim-pandoc-syntax'
on_source = ['vim-pandoc']

[[plugins]]
repo = 'qitoy/sssv'
on_cmd = 'SSSV'
